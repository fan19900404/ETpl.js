{"version":3,"file":"etpl.cjs.js","sources":["../src/index.ts"],"sourcesContent":["interface interfaceMap {\r\n  [key: string]: any;\r\n}\r\n\r\nconst etpl = (function() {\r\n  const templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n  const escapes: interfaceMap = {\r\n    \"'\": \"'\",\r\n    \"\\\\\": \"\\\\\",\r\n    \"\\r\": \"r\",\r\n    \"\\n\": \"n\",\r\n    \"\\u2028\": \"u2028\",\r\n    \"\\u2029\": \"u2029\"\r\n  };\r\n\r\n  const escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\r\n\r\n  const escapeChar = (match: string) => `\\\\${escapes[match]}`;\r\n\r\n  const templateFun = function(text: string) {\r\n    const matcher = RegExp(\r\n      [\r\n        templateSettings.escape.source,\r\n        templateSettings.interpolate.source,\r\n        templateSettings.evaluate.source\r\n      ].join(\"|\") + \"|$\",\r\n      \"g\"\r\n    );\r\n\r\n    let index = 0;\r\n    let source = \"__p+='\";\r\n    // debugger;\r\n    text.replace(matcher, function(\r\n      match,\r\n      escape,\r\n      interpolate,\r\n      evaluate,\r\n      offset\r\n    ) {\r\n      source += text.slice(index, offset).replace(escaper, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += `'+\\n((__t=(${escape}))==null?'':_.escape(__t))+\\n'`;\r\n      } else if (interpolate) {\r\n        source += `'+\\n((__t=(${interpolate}))==null?'':__t)+\\n'`;\r\n      } else if (evaluate) {\r\n        source += `';\\n${evaluate}\\n__p+='`;\r\n      }\r\n\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    source =\r\n      \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      \"with(obj||{}){\\n\" + source + \"}\\n\" +\r\n      \"return __p;\\n\";\r\n\r\n    try {\r\n      var render = new Function(\"obj\", source);\r\n      console.log(render)\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    function template(data: any) {\r\n      /* tslint:disable-next-line */\r\n      return render.call(this, data);\r\n    }\r\n    template.source = \"function(obj){\\n\" + source + \"}\";\r\n\r\n    return template;\r\n  };\r\n\r\n  return templateFun;\r\n})();\r\n\r\nexport default etpl;\r\n"],"names":[],"mappings":";;;;AAIA,IAAM,IAAI,GAAG,CAAC;IACZ,IAAM,gBAAgB,GAAG;QACvB,QAAQ,EAAE,iBAAiB;QAC3B,WAAW,EAAE,kBAAkB;QAC/B,MAAM,EAAE,kBAAkB;KAC3B,CAAC;IAEF,IAAM,OAAO,GAAiB;QAC5B,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,GAAG;QACT,IAAI,EAAE,GAAG;QACT,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,OAAO;KAClB,CAAC;IAEF,IAAM,OAAO,GAAG,2BAA2B,CAAC;IAE5C,IAAM,UAAU,GAAG,UAAC,KAAa,IAAK,OAAA,OAAK,OAAO,CAAC,KAAK,CAAG,GAAA,CAAC;IAE5D,IAAM,WAAW,GAAG,UAAS,IAAY;QACvC,IAAM,OAAO,GAAG,MAAM,CACpB;YACE,gBAAgB,CAAC,MAAM,CAAC,MAAM;YAC9B,gBAAgB,CAAC,WAAW,CAAC,MAAM;YACnC,gBAAgB,CAAC,QAAQ,CAAC,MAAM;SACjC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,EAClB,GAAG,CACJ,CAAC;QAEF,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,MAAM,GAAG,QAAQ,CAAC;QAEtB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,UACpB,KAAK,EACL,MAAM,EACN,WAAW,EACX,QAAQ,EACR,MAAM;YAEN,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACjE,KAAK,GAAG,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAE9B,IAAI,MAAM,EAAE;gBACV,MAAM,IAAI,gBAAc,MAAM,mCAAgC,CAAC;aAChE;iBAAM,IAAI,WAAW,EAAE;gBACtB,MAAM,IAAI,gBAAc,WAAW,yBAAsB,CAAC;aAC3D;iBAAM,IAAI,QAAQ,EAAE;gBACnB,MAAM,IAAI,SAAO,QAAQ,aAAU,CAAC;aACrC;YAED,OAAO,KAAK,CAAC;SACd,CAAC,CAAC;QACH,MAAM,IAAI,MAAM,CAAC;QAEjB,MAAM;YACJ,0CAA0C;gBAC1C,mDAAmD;gBACnD,kBAAkB,GAAG,MAAM,GAAG,KAAK;gBACnC,eAAe,CAAC;QAElB,IAAI;YACF,IAAI,MAAM,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;SACpB;QAAC,OAAO,CAAC,EAAE;YACV,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;YAClB,MAAM,CAAC,CAAC;SACT;QAED,SAAS,QAAQ,CAAC,IAAS;YAEzB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAChC;QACD,QAAQ,CAAC,MAAM,GAAG,kBAAkB,GAAG,MAAM,GAAG,GAAG,CAAC;QAEpD,OAAO,QAAQ,CAAC;KACjB,CAAC;IAEF,OAAO,WAAW,CAAC;CACpB,GAAG,CAAC;;;;"}